#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 67 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1           0 5607 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 262
(
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname Loope"
 #"rClean) (read-case-sensitive #t) (teachpacks ((lib \"batch-io.rkt\" "
 #"\"teachpack\" \"2htdp\"))) (htdp-settings #(#t constructor repeating"
 #"-decimal #f #t none #f ((lib \"b"
 #"atch-io.rkt\" \"teachpack\" \"2htdp\")))))"
) 0 0 4 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;;;;;  THE LOOPER   ;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; A project by:"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; Alex Maestre "
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Joey Gross"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Juan Ramirez"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; Logan Williams "
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Nolan Schock"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";required libs"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 6 #"rsound"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 18 #"rsound/piano-tones"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 19 3 14 #"\"put-file.rkt\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 19 3 14 #"\"get-file.rkt\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";-----------;      STRUCTURES        ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 62
#";a loop is (make-loop sound list-of-posns key boolean boolean)"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";list-of-posns is all positions in loop where sound occurs"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"loop"
0 0 23 3 2 #" ("
0 0 14 3 3 #"snd"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 14 3 3 #"hit"
0 0 23 3 1 #" "
0 0 14 3 3 #"col"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #"; a posin is (make-posin number boolean)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 23 3 1 #" "
0 0 14 3 6 #"active"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #"; world is (make-world list-of-loops boolean boolean)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #" ("
0 0 14 3 5 #"loops"
0 0 23 3 1 #" "
0 0 14 3 6 #"paused"
0 0 23 3 1 #" "
0 0 14 3 9 #"recording"
0 0 23 3 1 #" "
0 0 14 3 10 #"start-time"
0 0 23 3 1 #" "
0 0 14 3 9 #"loop-time"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";-----------;      DEFINITIONS      ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#"; C major scale notes on 4th octave and C from the 5th octave"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"d4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"62"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"64"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"f4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"65"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"g4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"67"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"a4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"b4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"71"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c5"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"piano-tone"
0 0 23 3 1 #" "
0 0 20 3 2 #"72"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";Image call. "
0 0 23 29 1 #"\n"
0 0 17 3 18 #";calls local files"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"C"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"z.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"CHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"zHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"x.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"DHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"xHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"E"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"c.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"EHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"cHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"F"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"v.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"FHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"vHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"G"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"b.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"GHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"bHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"A"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"n.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"AHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"nHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"B"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"m.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"BHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"mHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"C5"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\",.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"C5Hit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\",Hit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"I"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"i.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"IHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"iHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"K"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"k.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"KHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"kHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"L"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"l.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"LHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"lHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"O"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"o.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"OHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"oHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"P"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"p.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"PHit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"pHit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"back"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"back.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"clearbox"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 14 #"\"clearbox.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"record"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"record2.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"recordhit"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 16 #"\"record2Hit.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"reset"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"reset.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"save"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 16 #"\"savebutton.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"THELOOPER"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bitmap/file"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"LOOPER.png\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";num -> num"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";converts x to frames"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 1 #"s"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 5 #"44100"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"LEAD-FRAMES"
0 0 23 3 2 #" ("
0 0 14 3 1 #"s"
0 0 23 3 1 #" "
0 0 20 3 4 #"1/28"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 15 #"start-loop-time"
0 0 23 3 2 #" ("
0 0 14 3 1 #"s"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";pitch -> tone"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";make-tone simplifier"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-tone"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.1"
0 0 23 3 1 #" "
0 0 20 3 5 #"20000"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";a b -> b"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";helper funtion both"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"both"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";-----------;              TO-DRAW             ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; big-bang's draw function"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";; world -> image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"above"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"above"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 14 3 9 #"THELOOPER"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 6 #"beside"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 10 #"overlay/xy"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 2 #"12"
0 0 23 3 3 #")) "
0 0 14 3 4 #"LHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"L"
0 0 23 3 2 #") "
0 0 20 3 4 #"-350"
0 0 23 3 1 #" "
0 0 20 3 4 #"-100"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 10 #"overlay/xy"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"9"
0 0 23 3 3 #")) "
0 0 14 3 4 #"KHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"K"
0 0 23 3 2 #") "
0 0 20 3 4 #"-172"
0 0 23 3 1 #" "
0 0 20 3 4 #"-165"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 10 #"overlay/xy"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 2 #"11"
0 0 23 3 3 #")) "
0 0 14 3 4 #"IHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"I"
0 0 23 3 2 #") "
0 0 20 3 3 #"-10"
0 0 23 3 1 #" "
0 0 20 3 4 #"-100"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 10 #"overlay/xy"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 3 #")) "
0 0 14 3 4 #"PHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"P"
0 0 23 3 2 #") "
0 0 20 3 4 #"-300"
0 0 23 3 1 #" "
0 0 20 3 3 #"-25"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 10 #"overlay/xy"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 3 #")) "
0 0 14 3 4 #"OHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"O"
0 0 23 3 2 #") "
0 0 20 3 4 #"-120"
0 0 23 3 1 #" "
0 0 20 3 3 #"-20"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"          "
0 0 14 3 11 #"empty-image"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 8 #"clearbox"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 14 3 4 #"CHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"C"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #")) "
0 0 14 3 4 #"DHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 3 #")) "
0 0 14 3 4 #"EHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"E"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 3 #")) "
0 0 14 3 4 #"FHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"F"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"4"
0 0 23 3 3 #")) "
0 0 14 3 4 #"GHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"G"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 14 3 4 #"AHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"A"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"6"
0 0 23 3 3 #")) "
0 0 14 3 4 #"BHit"
0 0 23 3 1 #" "
0 0 14 3 1 #"B"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 20 3 1 #"7"
0 0 23 3 3 #")) "
0 0 14 3 5 #"C5Hit"
0 0 23 3 1 #" "
0 0 14 3 2 #"C5"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 8 #"clearbox"
0 0 23 3 13 #")            "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 6 #"beside"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 14 3 9 #"recordhit"
0 0 23 3 1 #" "
0 0 14 3 6 #"record"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 6 #"beside"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 11 #"place-loops"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 10 #"place-prog"
0 0 23 3 1 #" "
0 0 14 3 3 #"bar"
0 0 23 3 2 #" ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 6 #"beside"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 8 #"clearbox"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 6 #"beside"
0 0 23 3 1 #" "
0 0 14 3 5 #"reset"
0 0 23 3 1 #" "
0 0 14 3 4 #"save"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 4 #"back"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";;------------------------------------------------------------------"
 #"---;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";;                              TRACKER                             "
 #"   ;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";;------------------------------------------------------------------"
 #"---;;"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 19 #";~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 19 #";  GUI Constants  ;"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 19 #";~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";; bar"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-HEIGHT"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-LENGTH"
0 0 23 3 1 #" "
0 0 20 3 3 #"700"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"bar"
0 0 23 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-LENGTH"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-HEIGHT"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 16 #"\"cornflowerblue\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; width of the tracker"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"T-WIDTH"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; tracker (to show instrument positions)"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";string->image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"tracker"
0 0 23 3 1 #" "
0 0 14 3 3 #"clr"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 14 3 7 #"T-WIDTH"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-HEIGHT"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 14 3 3 #"clr"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; prog tracker (to show current position)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"prog-tracker"
0 0 23 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 14 3 7 #"T-WIDTH"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-HEIGHT"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 17 3 38 #";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 19 #";~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 19 #";  GUI Variables  ;"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 19 #";~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";; convert frame position to relative pixel position on the bar"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; posin -> num"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"pos-pixel"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"round"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-LENGTH"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 3 #") ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; if value is a num, draw. if value is false, don't draw."
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; posin image -> image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"maybe-draw"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 1 #" "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #" "
0 0 14 3 3 #"col"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 2 #" ("
0 0 14 3 12 #"posin-active"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 4 #")) ("
0 0 14 3 10 #"overlay/xy"
0 0 23 3 2 #" ("
0 0 14 3 7 #"tracker"
0 0 23 3 1 #" "
0 0 14 3 3 #"col"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 9 #"pos-pixel"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 7 #"cur-bar"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #" ("
0 0 14 3 12 #"posin-active"
0 0 23 3 1 #" "
0 0 14 3 5 #"posin"
0 0 23 3 3 #")) "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"        )) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";places current position in loop on the bar as the tracker"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";number->image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"place-prog"
0 0 23 3 1 #" "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #" "
0 0 14 3 6 #"paused"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 2 #"if"
0 0 23 3 1 #" "
0 0 14 3 6 #"paused"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 14 3 7 #"cur-bar"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 10 #"overlay/xy"
0 0 23 3 1 #" "
0 0 14 3 12 #"prog-tracker"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 5 #"round"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 8 #"B-LENGTH"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 23 3 2 #" ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 3 #") ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 6 #"))))) "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    ))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";; draw first set"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; list-of-posins image color -> image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"maybe-draw-all"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 1 #" "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #" "
0 0 14 3 3 #"col"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 10 #"maybe-draw"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 3 #") ("
0 0 14 3 14 #"maybe-draw-all"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #" "
0 0 14 3 3 #"col"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 2 #") "
0 0 14 3 3 #"col"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"        )) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";list-of-loops image->image"
0 0 23 29 1 #"\n"
0 0 17 3 84
(
 #";takes all loops in the world and calls place-posns to place positio"
 #"ns for each loop"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"place-loops"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 7 #"cur-bar"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"place-loops"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #") ("
0 0 14 3 14 #"maybe-draw-all"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 7 #"cur-bar"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";-----------;              ON-MOUSE            ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; mouse-handler"
0 0 23 29 1 #"\n"
0 0 17 3 68
#";; manages mouse events on the three buttons (record, reset, & save)"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; world x-pos y-pos mouse-event -> world"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"mouse-handler"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 3 #"evt"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 7 #"mouse=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"evt"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 20 3 3 #"550"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 3 #"630"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 3 #"185"
0 0 23 3 23 #")                      "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 17 3 24 #";taken from \" \" keypress"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 17 3 84
(
 #";means space bar has been hit to STOP recording -> end loop, make th"
 #"at the loop-time"
) 0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 10 #"make-world"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 11 #"out-of-loop"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 13 #"smallest-loop"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 10 #"make-world"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 7 #"no-loop"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                                "
0 0 14 3 15 #"start-loop-time"
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 12 #"make-pstream"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                      "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                      "
0 0 17 3 180
(
 #"; taken from construct-loop-list code for \"escape\" keypress       "
 #"                                                                    "
 #"                                              "
) 0 0 23 29 1 #"\n"
0 0 23 3 24 #"                      [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 20 3 3 #"918"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 3 #"987"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 14 #"valid-add-loop"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 8 #"rem-last"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 3 #"len"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 19 3 8 #"\"escape\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 49 #"                                                 "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                      "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                      "
0 0 17 3 29 #"; taken from saving function "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 20 3 3 #"555"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 3 #"625"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 20 3 4 #"1001"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 4 #"1055"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 10 #"save-sound"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"put-file"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 55 #"                                                      ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 42 #"                                         ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"])]"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 5 #"])])]"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"])]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";-----------;              ON-KEY              ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #"; big-bang's key-handler"
0 0 23 29 1 #"\n"
0 0 17 3 20 #"; world key -> world"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 14 3 15 #"start-loop-time"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 17 3 79
(
 #";means space bar has been hit to STOP recording -> end loop, make th"
 #"at the time"
) 0 0 23 29 1 #"\n"
0 0 23 3 20 #"                    "
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 10 #"make-world"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 11 #"out-of-loop"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 13 #"smallest-loop"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 25 #"))                       "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                    "
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 10 #"make-world"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 7 #"no-loop"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 14 3 15 #"start-loop-time"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 12 #"make-pstream"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 10 #"make-world"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 11 #"out-of-loop"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 13 #"smallest-loop"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 25 #"))                       "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 10 #"make-world"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 7 #"no-loop"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                              "
0 0 14 3 15 #"start-loop-time"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 12 #"make-pstream"
0 0 23 3 6 #")))])]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 10 #"save-sound"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"put-file"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 9 #"load-file"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"get-file"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"escape\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 14 #"valid-add-loop"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"rem-last"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 3 #"len"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #"))])"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";returns lesser value of the two numbers"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";number number -> number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"lesser"
0 0 23 3 1 #" "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 2 #") "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";min function"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";returns minimum of a list of positions"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";list-of-positions smallest ->number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"minum"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 8 #"smallest"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 8 #"smallest"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"minum"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #") ("
0 0 14 3 6 #"lesser"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                      "
0 0 14 3 8 #"smallest"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";returns the smallest posn value in the list of loops"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";list-of-loops number->number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"smallest-almost"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 8 #"smallest"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 8 #"smallest"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"minum"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 15 #"smallest-almost"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 8 #"smallest"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";returns the smallest posn value in the list of loops"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";list-of-loops->number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"smallest-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 5 #"))) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 15 #"smallest-almost"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 8 #")))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"smallest-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"420"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 4 #")) ("
0 0 14 3 12 #"make-pstream"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 2 #"15"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";reads in a file the user chooses and maps it to \"q\""
0 0 23 29 1 #"\n"
0 0 17 3 36 #";list-of-loops file -> list-of-loops"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"load-file"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 9 #"))       "
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 8 #"add-loop"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 7 #"rs-read"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 12 #"))          "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";list-of-loops->list-of-loops"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";removes posn from loop if it is out of loop range"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"out-of-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 12 #"out-of-posns"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 11 #"out-of-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"out-of-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"420"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #")) "
0 0 20 3 2 #"50"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";removes position from loop if it is outside the bounds of ltime"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"out-of-posns"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 12 #"out-of-posns"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 12 #"out-of-posns"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";list-of-loops->boolean"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";true if no positions in any loop, false otherwise"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"no-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 7 #"no-loop"
0 0 23 3 1 #"("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"no-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"420"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"no-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";-----------;           ON-RELEASE             ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";big-bang's on-release function"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";world key -> world"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"release"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 2 #" ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";list-of-positions position->list-of-positions"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";returns a list of positions with one more position added"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"add-posn"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 5 #")))])"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 3 #"lop"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";list-of-loops loop->list-of-loops"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";appends the input loop to the end of the input list of loops"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"add-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 14 #"valid-add-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 6 #"append"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 14 #"maybe-add-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";list-of-loops loop -> list-of-loops"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";returns "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"maybe-add-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                        "
0 0 14 3 5 #"loopA"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 14 #"maybe-add-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"loopA"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 17 3 25 #";list-of-loops -> boolean"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";checks a list-of-loops for any \"q\" loops, if there is a \"q\"-ret"
 #"urn false"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"valid-add-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 14 #"valid-add-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";list number->list"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";returns list without the last element of the input list"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rem-last"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 8 #"rem-last"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rem-last"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 3 #"len"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";list -> number"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";returns length of a list"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 3 #"len"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 3 #"len"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"len"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 3 #")) "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";list-of-loops posn key boolean -> list-of-loops"
0 0 23 29 1 #"\n"
0 0 17 3 94
(
 #";constructs a list of loops with an added position for the correspon"
 #"ding sound to the keypress"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"escape\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 3 #") ("
0 0 14 3 9 #"valid-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 32 #"))                              "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"add-posn"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 12 #"check-if-hit"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 12 #"check-if-hit"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 3 #") ("
0 0 14 3 9 #"valid-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"both"
0 0 23 3 2 #" ("
0 0 14 3 13 #"pstream-queue"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 12 #"check-if-hit"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 19 #"construct-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 2 #"up"
0 0 23 3 1 #" "
0 0 15 3 3 #"rec"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"         ]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";list-of-loops loop-time -> list-of-loops"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";changes all posns in all loops to fit new loop-time 'ltime'"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 12 #"remake-posns"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"loop-hit"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 16 #"remake-loop-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";list-of-posins loop-time -> list-of-posins"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";changes posns in lop to fit new loop-time 'ltime'"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"remake-posns"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 3 #") ("
0 0 14 3 12 #"posin-active"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 12 #"remake-posns"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";key loop -> boolean"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";returns true if key for sound was hit AND in recording mode, else f"
 #"alse"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"valid-add"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ke"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-key"
0 0 23 3 1 #" "
0 0 14 3 5 #"loopA"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 17 3 25 #";-----------------------;"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 17 3 25 #";        LOOPING        ;"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 17 3 25 #";-----------------------;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";-----------;              ON-TICK             ;-----------;;"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";world->world"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";if frames == any loop posn, play at current time"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tock"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 16 #"queue-all-sounds"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 11 #"world-loops"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 12 #"world-paused"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 15 #"world-recording"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 16 #"world-start-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 15 #"world-loop-time"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 8 #"world-ps"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";list-of-loops -> list-of-loops"
0 0 23 29 1 #"\n"
0 0 17 3 87
(
 #";calls queue-sounds for all sounds in list-of-loops to check if soun"
 #"ds should be played"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"queue-all-sounds"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 12 #"queue-sounds"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 8 #"loop-key"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 12 #"check-if-hit"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 8 #"loop-col"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 16 #"queue-all-sounds"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #"; list-of-posns snd  -> list-of-posns"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";calls maybe-play for all sounds to check if the sound should be pla"
 #"yed"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"queue-sounds"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 1 #" "
0 0 14 3 3 #"snd"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 22 #"                      "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 10 #"maybe-play"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 3 #"snd"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 12 #"queue-sounds"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 3 #"snd"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #"; position pstream sound frames-> posn"
0 0 23 29 1 #"\n"
0 0 17 3 103
(
 #"; if position is less than lead-frames away from current pstream fra"
 #"me,queue up sound at given position"
) 0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #"; queues one sound at a time based on how close it is to the current"
 #" frame"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"maybe-play"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 1 #" "
0 0 14 3 3 #"snd"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 2 #") "
0 0 14 3 11 #"LEAD-FRAMES"
0 0 23 3 4 #")  ("
0 0 14 3 21 #"pstream-current-frame"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 12 #"posin-active"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 4 #"both"
0 0 23 3 2 #" ("
0 0 14 3 13 #"pstream-queue"
0 0 23 3 1 #" "
0 0 14 3 2 #"ps"
0 0 23 3 1 #" "
0 0 14 3 3 #"snd"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 3 #") ("
0 0 14 3 12 #"posin-active"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 10 #"make-posin"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 3 #") ("
0 0 14 3 12 #"posin-active"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 4 #"posn"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; positions frame -> boolean"
0 0 23 29 1 #"\n"
0 0 17 3 50 #"; compares all posns to cur-frame until it is true"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"check-if-hit"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 1 #" "
0 0 14 3 10 #"cur-frames"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 3 #")) "
0 0 14 3 11 #"LEAD-FRAMES"
0 0 23 3 2 #") "
0 0 14 3 10 #"cur-frames"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 12 #"check-if-hit"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"posns"
0 0 23 3 2 #") "
0 0 14 3 10 #"cur-frames"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";;------------------------------------------------------------------"
 #"---;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";;                              SAVING                              "
 #"   ;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";;------------------------------------------------------------------"
 #"---;;"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #"; sound list-of-positions loop-time -> listception (list inside list"
 #"...)"
) 0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #"; converts parameters into a list of lists of sounds with their rela"
 #"tive positions"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-snd"
0 0 23 3 1 #" "
0 0 14 3 3 #"snd"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"snd"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 8 #"list-snd"
0 0 23 3 1 #" "
0 0 14 3 3 #"snd"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-snd"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"89"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 20 3 2 #"20"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";list-of-loops->list-of-lists"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";converts a list of loops to a list of lists"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";each list inside the main list contains a sound and the position of"
 #" that sound."
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"conv-list"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 9 #"conv-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 13 #")            "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 6 #"append"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-snd"
0 0 23 3 2 #" ("
0 0 14 3 8 #"loop-snd"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #")) ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 3 #")) "
0 0 14 3 5 #"ltime"
0 0 23 3 3 #") ("
0 0 14 3 9 #"conv-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"ltime"
0 0 23 3 19 #"))                 "
0 0 23 29 1 #"\n"
0 0 23 3 18 #"              )]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"conv-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"89"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"440"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #")) "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";list-of-loops->boolean"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";returns true if there are any positions in any loop, else false"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"has-posns"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 9 #"has-posns"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";list->list"
0 0 23 29 1 #"\n"
0 0 17 3 96
(
 #";takes the previously defined list of rsounds and positions and conv"
 #"erts it to one single rsound"
) 0 0 23 29 1 #"\n"
0 0 17 3 36 #";then saves that rsound to loop1.wav"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"save-sound"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 4 #"file"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 1 #"l"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"has-posns"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"          "
0 0 14 3 1 #"l"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"both"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-write"
0 0 23 3 2 #" ("
0 0 14 3 8 #"assemble"
0 0 23 3 2 #" ("
0 0 14 3 9 #"conv-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 5 #"ltime"
0 0 23 3 3 #")) "
0 0 14 3 4 #"file"
0 0 23 3 2 #") "
0 0 14 3 1 #"l"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7         331 64           0 0           0 54 0 23 29 1 #"\n"
0 0 17 3 21 #";list-of-positions ->"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";returns  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"smallest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"minum"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"smallest"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"420"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 4 #"))) "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0           0 0 0 23 29 1 #"\n"
0 7         457 4           0 0           0 75 0 17 3 25
#"; number number -> number"
0 0 23 29 1 #"\n"
0 0 17 3 37 #"; returns whichever number is greater"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"greater"
0 0 23 3 1 #" "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 2 #") "
0 0 14 3 2 #"n1"
0 0 23 3 1 #" "
0 0 14 3 2 #"n2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #"; list-of-positions largest -> largest"
0 0 23 29 1 #"\n"
0 0 17 3 10 #"; returns "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"maxum"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 7 #"largest"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 7 #"largest"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"maxum"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #") ("
0 0 14 3 7 #"greater"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                      "
0 0 14 3 7 #"largest"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0           0 0 0 23 29 1 #"\n"
0 7         325 64           0 0           0 53 0 17 3 22
#"; list-of-positions ->"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";returns "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"greatest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"maxum"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posin-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"greatest"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"420"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 4 #"))) "
0 0 20 3 3 #"420"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0           0 0 0 23 29 1 #"\n"
0 7         631 4           0 0           0 104 0 17 3 53
#";returns the greatest posn value in the list of loops"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";list-of-loops->number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"greatest-loop"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"maxum"
0 0 23 3 2 #" ("
0 0 14 3 10 #"loop-posns"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 13 #"greatest-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"greatest-loop"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"ding"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"69"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"q\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-posin"
0 0 23 3 1 #" "
0 0 20 3 3 #"420"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 19 3 3 #"\"e\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 3 #"420"
0 0 23 3 1 #")"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";                                                          ;"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";                     THE BIG-BANG                         ;"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";                                                          ;"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"c4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"firebrick\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"d4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"crimson\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"e4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"f4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"v\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"tomato\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"g4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"indianred\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"a4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"n\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"lightcoral\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"b4"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"m\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"lightpink\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"c5"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 15 #"\"lavenderblush\""
0 0 23 3 3 #")  "
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 23 3 1 #" "
0 0 14 3 10 #"c-hi-hat-1"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 23 3 1 #" "
0 0 14 3 4 #"kick"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"k\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 14 #"\"midnightblue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 23 3 1 #" "
0 0 14 3 8 #"o-hi-hat"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"gold\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 23 3 1 #" "
0 0 14 3 5 #"snare"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"i\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"royalblue\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 23 3 1 #" "
0 0 14 3 8 #"bassdrum"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 15 #"\"darkslategray\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"261.63"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"brown\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"293.66"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"sienna\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"329.63"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"chocolate\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"349.23"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"darkorange\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"392.00"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"coral\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"440.00"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"darksalmon\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-loop"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-note"
0 0 23 3 1 #" "
0 0 20 3 6 #"493.88"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"j\""
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"lightsalmon\""
0 0 23 3 4 #")   "
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 14 3 5 #"empty"
0 0 23 3 20 #"))))))))))))))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 20 3 1 #"0"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 15 #"start-loop-time"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 12 #"make-pstream"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 6 #"on-key"
0 0 23 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"tock"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 10 #"on-release"
0 0 23 3 1 #" "
0 0 14 3 7 #"release"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 8 #"on-mouse"
0 0 23 3 1 #" "
0 0 14 3 13 #"mouse-handler"
0 0 23 3 2 #"])"
0 0 23 29 1 #"\n"
0           0
